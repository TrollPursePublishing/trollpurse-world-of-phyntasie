"use strict";angular.module("app.controllers",["app.services"]).controller("CommandCtrl",["$scope","$location","$window","UserService","CommandService","MessageService","$filter",function(n,t,i,r,u,f,e){function o(){r.isLoggedIn()?f.startupServices().then(function(){f.chatConnected&&n.$parent.$emit("chatready")},function(n){console.log("error",n)}):t.path("/login")}o();n.user=r.user;n.messages=[];n.currentDescription={};n.navigation={};n.$parent.$on("chat",function(t,i){console.log("chat",i.name+":"+i.msg);n.$apply(function(){n.messages.push(i.name+" said, "+i.msg)})});n.$parent.$on("playerjoin",function(t,i){n.$apply(function(){i.name!=n.user.FullName&&n.messages.push(i.name+" has entered.")})});n.$parent.$on("chatready",function(){console.log("chatready","initialized");f.joinLocation(r.user.navigation.currentLocation.Id,r.user.FullName)});n.submit=function(t){t.indexOf('"')===0&&t.lastIndexOf('"')===t.length-1?f.send(n.user.FullName,t,n.user.navigation.currentLocation.Id):(f.leaveLocation(n.user.navigation.currentLocation.Id),u.submit(t,n.user.Id).then(function(t){for(var i=angular.fromJson(t.data),u=0;u<i.messages.length;u++)n.messages.push(i.messages[u]);n.user=i.player;r.user=n.user;f.joinLocation(n.user.navigation.currentLocation.Id,r.user.FullName)},function(t){console.error("error",t);f.joinLocation(n.user.navigation.currentLocation.Id,r.user.FullName)}))};n.detailedView=function(t){delete t.Id;n.currentDescription=t;angular.forEach(t,function(t,i){i.indexOf("$")<0&&n.messages.push(e("property")(i)+":   "+t)})}}]).controller("ResetCtrl",["$scope","$routeParams","$window","AccountService",function(n,t,i,r){n.$root.title="External Portal";n.result={};n.enterResult={};n.showClick=!1;n.errored=!1;n.resetPassword=function(t,i){n.showClick=!0;n.errored=!1;r.resetPassword(n.enterResult.additionalData,t,i).then(function(t){console.log(t.data);n.showClick=!1;n.result=angular.fromJson(t.data);n.errored=!result.success},function(){n.showClick=!1;n.errored=!0;n.result={msg:"Reset not successful, please contact support. I'm Sorry",success:!1,additionalData:n.enterResult.additionalData}})};n.$on("$viewContentLoaded",function(){r.resetConfirm(t.hash,t.securityStamp).then(function(t){n.enterResult=angular.fromJson(t.data)},function(){n.enterResult={msg:"Reset not successful, please contact support. I'm Sorry",success:!1}})})}]).controller("HomeCtrl",["$scope","$location","$window","RanksService","NotificationService","gamename",function(n,t,i,r,u,f){n.$root.title=f;n.items={};n.events={};n.acheivements={};n.getData=function(){u.getEvents().then(function(t){n.events=angular.fromJson(t.data).events},function(n){console.error("error",n)});u.getAllPlayerAchievements().then(function(t){n.acheivements=angular.fromJson(t.data).pairs},function(n){console.error("error",n)});r.get().then(function(t){n.items=angular.fromJson(t.data).pairs},function(n){console.error("error",n)})};n.$on("$viewContentLoaded",function(){n.getData()})}]).controller("SignUpCtrl",["$scope","$location","$window","UserService","gamename",function(n,t,i,r,u){n.$root.title=u+" | Join Now!";n.error={};n.hasError=!1;n.registered=!1;n.notification="";n.hasClicked=!1;n.pleasewait="Trying to register, please wait :D";n.signup=function(t,i,u,f,e){return n.hasClicked=!0,r.register(t,i,u,f,e).then(function(t){console.log(t);n.error={};n.hasError=!1;n.registered=!0;n.notification=t.data.Errors[0];n.hasClicked=!1},function(t){n.hasError=!0;var i=angular.fromJson(t);console.log(i);n.error=angular.fromJson(i.ModelState);n.hasClicked=!1}),n.success};n.checkRerouteToUserpage=function(){return r.isLoggedIn?(t.path("/userwelcome"),!0):!1}}]).controller("RanksCtrl",["$scope","$location","$window","RanksService","UserService","$filter","gamename",function(n,t,i,r,u,f,e){n.$root.title=e+" | Ranks";n.items={};n.rankuser={};n.isLoggedIn=u.isLoggedIn;n.rank="";n.getData=function(){r.getAll().then(function(t){if(n.items=f("orderBy")(angular.fromJson(t.data).pairs,"-score"),n.isLoggedIn)for(var i=0;i<n.items.length;++i)if(n.items[i].name===u.user.FullName){n.rank=i+1;break}});u.isLoggedIn&&r.getById(u.user.Id).then(function(t){n.rankuser=angular.fromJson(t.data)})};n.$on("$viewContentLoaded",function(){n.getData()})}]).controller("AboutCtrl",["$scope","$location","$window","gamename",function(n,t,i,r){n.$root.title=r+" | About"}]).controller("LoginCtrl",["$scope","$location","$window","UserService","gamename",function(n,t,i,r,u){n.$root.title=u+" | Sign In";n.user={};n.isLoggedIn=!1;n.authError="";n.result={};n.bAuthError=!1;n.reset=function(t){r.reset(t).then(function(t){n.result=angular.fromJson(t.data)},function(){n.result={msg:"Sorry, an error occured.",success:!1}})};n.login=function(n,t){r.login(n,t).then(function(n){console.log(n)},function(n){console.log(n)})}}]).controller("UserCtrl",["$scope","$location","$window","UserService","NotificationService","AccountService","gamename",function(n,t,i,r,u,f,e){function o(){n.getData()}n.$root.title=e+" | "+r.user.FullName;n.username="";n.isLoggedIn=!1;n.userImageUrl="";n.user={};n.acheivements={};n.registerText="Register To Get Email";n.registerSuccess=!1;n.registerClicked=!1;o();n.registerToGetEmail=function(){f.registerForUpdates(n.user.Id).then(function(t){n.registerText=angular.fromJson(t.data).msg;n.registerSuccess=!0},function(){n.registerText="Unfortunately, we could not register you to get updates :(";n.registerSuccess=!1});n.registerClicked=!0};n.logout=function(){r.logout(r.user.Id).then(function(){r.isLoggedIn=!1;r.user={};n.isLoggedIn=!1;n.acheivements={};n.username="";t.path("/")})};n.adventure=function(){t.path("/adventure")};n.checkRerouteToUserpage=function(){return r.isLoggedIn?(n.username=r.user.FullName,n.isLoggedIn=r.isLoggedIn,n.userImageUrl=r.getUserImage(r.user.Id),!0):(t.path("/"),!1)};n.getData=function(){u.getPlayerAcheivements(r.user.Id).then(function(t){n.acheivements=angular.fromJson(t.data)},function(n){console.error("error",n)});n.user=r.user}}]).controller("AccountCtrl",["$scope","$routeParams","$window","AccountService",function(n,t,i,r){function u(){r.doNotDisturb(t.hash).then(function(t){n.result=angular.fromJson(t.data)},function(){n.result={msg:"Action not successful. I'm Sorry",success:!1}})}n.$root.title="External Portal";n.result={};u()}]).controller("RegisterCtrl",["$scope","$routeParams","$window","AccountService",function(n,t,i,r){function u(){r.confirmEmail(t.hash,t.confirmationCode).then(function(t){n.result=angular.fromJson(t.data)},function(){n.result={msg:"Registration not successful, please contact support. I'm Sorry",success:!1}})}n.$root.title="External Portal";n.result={};u()}]).controller("Error404Ctrl",["$scope","$location","$window",function(n){n.$root.title="Error 404: Page Not Found"}]);
//# sourceMappingURL=controllers.min.js.map
